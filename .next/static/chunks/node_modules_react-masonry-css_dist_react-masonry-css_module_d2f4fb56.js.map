{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Next.Js/webstacks/node_modules/react-masonry-css/dist/react-masonry-css.module.js"],"sourcesContent":["import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}